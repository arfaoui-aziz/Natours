@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin centerVH {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

//MEDIA QUERIES MANAGER

/*

0-600px:               Phone
600px - 900px          Tablet Portrait
900px - 1200px:        Tablet Landscape
[1200px - 1800px]      Our normal styles
1800px +               Big destop
*/

// @mixin respond-phone {
//   @media (max-width: 600px) {
//     //instead of passing a list of params to our mixin
//     //we use @content to include an entire block of code
//     @content;
//   }
// }

/*
$breakpoint argument choices:
- phone
- tab-port
- tab-land
- big-destop

ORDER: Base + typography > general layout + grid > page layout > components

*/

@mixin respond($breakpoint) {
  @if $breakpoint == phone {
    @media only screen and (max-width: 37.5em) {
      //600px
      @content;
    }
  }

  @if $breakpoint == tab-port {
    @media only screen and (max-width: 56.25em) {
      //900px
      @content;
    }
  }

  @if $breakpoint == tab-land {
    @media only screen and (max-width: 75em) {
      //1200px
      @content;
    }
  }

  @if $breakpoint == big-destop {
    @media only screen and (min-width: 112.5em) {
      //1800px
      @content;
    }
  }
}
